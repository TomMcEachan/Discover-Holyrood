name: Build, Push & Deploy CMS & Search
on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: true
        default: "warning"
        type: choice
        options:
          - info
          - warning
          - debug
defaults:
  run:
    working-directory: ./apps/cms

jobs:
  Build-and-Push-CMS-Container:
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        shell: bash
    steps:
      # Checkout Repo
      - name: Checkout Repo
        uses: actions/checkout@v2
      # Login
      - name: Docker Login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      # Build and Push
      - name: Build CMS Image and Push to ACR
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: discoverholyroodregistry.azurecr.io/discoverholyroodcms:${{ github.sha }}
          file: ./apps/cms/Dockerfile.prod
          no-cache: true
  Build-and-Deploy-CMS-Container:
    runs-on: ubuntu-latest
    needs: Build-and-Push-CMS-Container
    environment: production
    defaults:
      run:
        shell: bash
    steps:
      # Login
      - name: Docker Login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      # Deploy
      - name: Deploy CMS to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          resource-group-name: $${{ secrets.RESOURCE_GROUP }}
          app-name: discover-holyrood-cms
          images: ${{ secrets.REGISTRY_LOGIN_SERVER }}/discoverholyroodcms:${{ github.sha }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          slot-name: production
  Build-and-Deploy-Search-Container:
    runs-on: ubuntu-latest
    needs: Build-and-Deploy-CMS-Container
    environment: production
    defaults:
      run:
        shell: bash
    steps:
      # Login
      - name: Docker Login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      # Deploy
      - name: Deploy Search to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          resource-group-name: $${{ secrets.RESOURCE_GROUP }}
          app-name: discoverholyroodmeilisearch
          images: getmeili/meilisearch:latest
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_SEARCH }}
          slot-name: production
  Test-Index-Functions:
    runs-on: ubuntu-latest
    needs: Build-and-Deploy-Search-Container
    defaults:
      run:
        shell: bash
        working-directory: ./apps/search
    steps:
      # Checkout Repo
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # Setup Node
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"
      # Install Dependencies
      - name: Install Dependencies
        run: npm install
      # Test Index Functions
      - name: Test Index Functions
        run: npm run test
        env:
          SEARCH_KEY: ${{ secrets.SEARCH_KEY }}
          SEARCH_HOST: ${{ secrets.SEARCH_HOST }}
  Deploy-Search-Index:
    runs-on: ubuntu-latest
    needs: Test-Index-Functions
    defaults:
      run:
        shell: bash
        working-directory: ./apps/search
    steps:
      # Checkout Repo
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # Setup Node
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"
      # Install Dependencies
      - name: Install Dependencies
        run: npm install
      # Deploy Search Index
      - name: Deploy Search Index
        run: npm run index:ts
        env:
          SEARCH_KEY: ${{ secrets.SEARCH_KEY }}
          SEARCH_HOST: ${{ secrets.SEARCH_HOST }}
